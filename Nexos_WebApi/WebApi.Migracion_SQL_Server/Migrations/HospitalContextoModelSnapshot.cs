// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Datos.Contexto;

namespace WebApi.Migracion_SQL_Server.Migrations
{
    [DbContext(typeof(HospitalContexto))]
    partial class HospitalContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Modelo.Entidades.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroCredencial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Pruebas 1",
                            HospitalId = 1,
                            Nombres = "Doctor 1",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Pruebas 2",
                            HospitalId = 1,
                            Nombres = "Doctor 2",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Pruebas 3",
                            HospitalId = 1,
                            Nombres = "Doctor 3",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Pruebas 4",
                            HospitalId = 2,
                            Nombres = "Doctor 4",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "Pruebas 5",
                            HospitalId = 2,
                            Nombres = "Doctor 5",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 6,
                            Apellidos = "Pruebas 6",
                            HospitalId = 1,
                            Nombres = "Doctor 6",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 7,
                            Apellidos = "Pruebas 7",
                            HospitalId = 3,
                            Nombres = "Doctor 7",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 8,
                            Apellidos = "Pruebas 8",
                            HospitalId = 3,
                            Nombres = "Doctor 8",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 9,
                            Apellidos = "Pruebas 9",
                            HospitalId = 3,
                            Nombres = "Doctor 9",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 10,
                            Apellidos = "Pruebas 10",
                            HospitalId = 2,
                            Nombres = "Doctor 10",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 11,
                            Apellidos = "Pruebas 11",
                            HospitalId = 1,
                            Nombres = "Doctor 11",
                            NumeroCredencial = 0
                        },
                        new
                        {
                            Id = 12,
                            Apellidos = "Pruebas 12",
                            HospitalId = 1,
                            Nombres = "Doctor 12",
                            NumeroCredencial = 0
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.DoctoresEspecialidades", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "EspecialidadId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("DoctoresEspecialidades");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 1,
                            EspecialidadId = 2
                        },
                        new
                        {
                            DoctorId = 1,
                            EspecialidadId = 3
                        },
                        new
                        {
                            DoctorId = 1,
                            EspecialidadId = 4
                        },
                        new
                        {
                            DoctorId = 2,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 2,
                            EspecialidadId = 3
                        },
                        new
                        {
                            DoctorId = 2,
                            EspecialidadId = 4
                        },
                        new
                        {
                            DoctorId = 3,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 3,
                            EspecialidadId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 4,
                            EspecialidadId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            EspecialidadId = 3
                        },
                        new
                        {
                            DoctorId = 5,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 5,
                            EspecialidadId = 2
                        },
                        new
                        {
                            DoctorId = 5,
                            EspecialidadId = 3
                        },
                        new
                        {
                            DoctorId = 6,
                            EspecialidadId = 4
                        },
                        new
                        {
                            DoctorId = 7,
                            EspecialidadId = 1
                        },
                        new
                        {
                            DoctorId = 7,
                            EspecialidadId = 2
                        },
                        new
                        {
                            DoctorId = 8,
                            EspecialidadId = 3
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especialidad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Especialidad 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Especialidad 2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Especialidad 3"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Especialidad 4"
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Hospital 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Hospital 2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Hospital 3"
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeguroSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Pruebas 1",
                            Nombres = "Paciente 1",
                            SeguroSocial = "123456",
                            Telefono = 123456789
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Pruebas 2",
                            Nombres = "Paciente 2",
                            SeguroSocial = "456789",
                            Telefono = 123456789
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Pruebas 3",
                            Nombres = "Paciente 3",
                            SeguroSocial = "101112",
                            Telefono = 10111213
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Pruebas 4",
                            Nombres = "Paciente 4",
                            SeguroSocial = "131415",
                            Telefono = 14151617
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "Pruebas 5",
                            Nombres = "Paciente 5",
                            SeguroSocial = "161718",
                            Telefono = 18192021
                        },
                        new
                        {
                            Id = 6,
                            Apellidos = "Pruebas 6",
                            Nombres = "Paciente 6",
                            SeguroSocial = "202122",
                            Telefono = 22232425
                        },
                        new
                        {
                            Id = 7,
                            Apellidos = "Pruebas 7",
                            Nombres = "Paciente 7",
                            SeguroSocial = "232425",
                            Telefono = 26272829
                        },
                        new
                        {
                            Id = 8,
                            Apellidos = "Pruebas 8",
                            Nombres = "Paciente 8",
                            SeguroSocial = "262728",
                            Telefono = 30313233
                        },
                        new
                        {
                            Id = 9,
                            Apellidos = "Pruebas 9",
                            Nombres = "Paciente 9",
                            SeguroSocial = "293031",
                            Telefono = 34353637
                        },
                        new
                        {
                            Id = 10,
                            Apellidos = "Pruebas 10",
                            Nombres = "Paciente 10",
                            SeguroSocial = "323334",
                            Telefono = 38394041
                        },
                        new
                        {
                            Id = 11,
                            Apellidos = "Pruebas 11",
                            Nombres = "Paciente 11",
                            SeguroSocial = "353637",
                            Telefono = 42434445
                        },
                        new
                        {
                            Id = 12,
                            Apellidos = "Pruebas 12",
                            Nombres = "Paciente 12",
                            SeguroSocial = "383940",
                            Telefono = 46474850
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.PacientesDoctores", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "PacienteId");

                    b.HasIndex("PacienteId");

                    b.ToTable("PacientesDoctores");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            PacienteId = 1
                        },
                        new
                        {
                            DoctorId = 2,
                            PacienteId = 2
                        },
                        new
                        {
                            DoctorId = 2,
                            PacienteId = 3
                        },
                        new
                        {
                            DoctorId = 1,
                            PacienteId = 4
                        },
                        new
                        {
                            DoctorId = 4,
                            PacienteId = 5
                        },
                        new
                        {
                            DoctorId = 4,
                            PacienteId = 7
                        },
                        new
                        {
                            DoctorId = 5,
                            PacienteId = 8
                        });
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.Doctor", b =>
                {
                    b.HasOne("WebApi.Modelo.Entidades.Hospital", "Hospital")
                        .WithMany("Doctores")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.DoctoresEspecialidades", b =>
                {
                    b.HasOne("WebApi.Modelo.Entidades.Doctor", "Doctor")
                        .WithMany("DoctoresEspecialidades")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Modelo.Entidades.Especialidad", "Especialidad")
                        .WithMany("DoctoresEspecialidades")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Modelo.Entidades.PacientesDoctores", b =>
                {
                    b.HasOne("WebApi.Modelo.Entidades.Doctor", "Doctor")
                        .WithMany("PacientesDoctores")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Modelo.Entidades.Paciente", "Paciente")
                        .WithMany("PacientesDoctores")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
